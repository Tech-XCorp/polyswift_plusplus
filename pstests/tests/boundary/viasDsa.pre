######################################################################
#
# @file    viasDsa.pre
#
# @version $Id$
#
# Copyright &copy; 2015-2020, Tech-X Corporation, Boulder, CO.
# All rights reserved.
#
######################################################################

###################################
#  Grid parameters                #
#    Num-cells in sim  [NX NY NZ] #
#    Cell length in Rg [DX DY DZ] #
###################################
# NX and NY are not 101 as in orignal geometry file
$ NX = 100
$ NY = 100
$ NZ = 1
# $ NZ = 11 For use with eventual 3D setup
$ DX = 0.15
$ DY = 0.15
$ DZ = 0.15

############################
#    Debug print flags     #
############################
$ DBUPDATER     = "'off'"
$ DBINTERACTION = "'off'"
$ DBEFFHAMIL    = "'off'"
$ DBPOLYMER     = "'off'"
$ DBSOLVENT     = "'off'"
$ DBBLOCK       = "'off'"
$ DBPHYSFIELD   = "'off'"
$ DBBNDRY       = "'off'"
$ DBDEFAULT     = "'off'"

##########################################################
#            Domain parameters and defaults              #
##########################################################

nsteps = 600            # timesteps in relaxation algo.
randomSeed = 12345      # If not set, seed uses default
dumpPeriodicity = 50    # dump period
printdebug = off        # Switch for certain debug msgs

$ import pseudoSpecSetup
setupPS(NX, NY, NZ, DX, DY, DZ, "'off'")
##########################################################

#######################################################
# Physical "observable" fields
#######################################################
<PhysField totStyrDens>
  kind = monomerDens
  type = fieldD3R
  printdebug = DBPHYSFIELD
</PhysField>

<PhysField totEthyDens>
  kind = monomerDens
  type = fieldD3R
  printdebug = DBPHYSFIELD
</PhysField>

<PhysField defaultPressure>
  kind = constraint
  type = fieldD3R
  excludefields = [totStyrDens totEthyDens]
  preconditionFactor = 2.0
  printdebug = DBPHYSFIELD
</PhysField>

################################################
# A Boundary object
################################################

<Boundary softEthyWalls>
  kind = fixedWall
  # Assuming that PhysFields for a constraint field is
  # automatically held
  printdebug = DBBNDRY
  boundaryfield = totWall
  dataFileName = filter.dat
</Boundary>

##########################################
# These physical fields represent density
# regions (walls)

<PhysField totWall>
  kind = monomerDens
  type = fieldD3R
  printdebug = DBPHYSFIELD
</PhysField>
##########################################

################################################
# End of Boundary objects
################################################

#########################################################
# Effective Hamiltonian: defines energetic SCFT model
#   (for now) the update methods
#########################################################
<EffHamil mainHamil>

  kind = canonicalMF
  printdebug = DBEFFHAMIL

  updaterSequence = [wAwB]

  <Updater wAwB>
    kind = steepestDescent
    type = incompressible
    relaxlambdas = [0.10 0.05]
    noise = 0.02
    printdebug = DBUPDATER

    # Two-component updates
    updatefields = [totStyrDens totEthyDens ]
    interactions = [StyrEthy EthyWall StyrWall]
    constraints = [ EthyWall StyrWall ]

  </Updater>

  # Interactions can be separate from Any Updater/etc
  # blocks or type of eff-Hamiltonian
  <Interaction StyrEthy>
    kind = flory
    chi = 0.18
    scfields = [totStyrDens totEthyDens]
    printdebug = DBINTERACTION
  </Interaction>

  <Interaction EthyWall>
    kind = floryWall
    chi = 0.30
    scfields = [totWall totEthyDens]
    wallField = totWall
    printdebug = DBINTERACTION
  </Interaction>

  <Interaction StyrWall>
    kind = floryWall
    chi = 0.02
    scfields = [totWall totStyrDens]
    wallField = totWall
    printdebug = DBINTERACTION
  </Interaction>

</EffHamil>

#########################################################################
#  A Polymer primarily describes chain architecture...namely
#  a collection of <Block>s (eg homopolymer, diblock, triblock,
#  n-arm star, n-arm branched etc).
#
#  The length of the 1st polymer listed will be used to scale lengths
#  in the theory
#########################################################################
<Polymer diblock1>

  kind = blockCopolymer
  volfrac = 1.0
  length = 100
  printdebug = DBPOLYMER

  <Block blockA>
    kind = flexPseudoSpec
    scfield = totStyrDens
    ds = 0.025
    lengthfrac = 0.70
    headjoined = [freeEnd]
    tailjoined = [blockB]
    printdebug = DBBLOCK
  </Block>

  <Block blockB>
    kind = flexPseudoSpec
    scfield = totEthyDens
    ds = 0.025
    lengthfrac = 0.30
    headjoined = [blockA]
    tailjoined = [freeEnd]
    printdebug = DBBLOCK
  </Block>

</Polymer>

<History freeE1>
 kind = freeEnergy
 updatePeriodicity = 10
 updaterName = wAwB
</History>
